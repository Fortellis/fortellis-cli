"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLocationForJsonPath = ({ lineMap, ast }, path, closest = false) => {
    const node = findNodeAtPath(ast, path, closest);
    if (node === void 0 || node.range === void 0) {
        return;
    }
    return { range: node.range };
};
function findNodeAtPath(node, path, closest) {
    pathLoop: for (const part of path) {
        const segment = Number.isInteger(Number(part)) ? Number(part) : part;
        if (typeof segment === 'string') {
            if (node.type !== 'object' || !Array.isArray(node.children)) {
                return closest ? node : void 0;
            }
            for (const propertyNode of node.children) {
                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {
                    node = propertyNode.children[1];
                    continue pathLoop;
                }
            }
            return closest ? node : void 0;
        }
        else {
            if (node.type !== 'array' || segment < 0 || !Array.isArray(node.children) || segment >= node.children.length) {
                return closest ? node : void 0;
            }
            node = node.children[segment];
        }
    }
    return node;
}
//# sourceMappingURL=getLocationForJsonPath.js.map