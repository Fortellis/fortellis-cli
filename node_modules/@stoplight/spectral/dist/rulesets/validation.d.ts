import { JSONSchema7 } from 'json-schema';
import { FileRule, IRulesetFile } from '../types/ruleset';
import { ErrorObject } from 'ajv';
declare const AJV: any;
import { IFunction, IFunctionPaths, IFunctionValues, Rule } from '../types';
export declare class ValidationError extends AJV.ValidationError {
    errors: ErrorObject[];
    message: string;
    constructor(errors: ErrorObject[]);
}
export declare function assertValidRuleset(ruleset: unknown): IRulesetFile;
export declare function isValidRule(rule: FileRule): rule is Rule;
export declare function decorateIFunctionWithSchemaValidation(fn: IFunction, schema: JSONSchema7): (data: unknown, opts: unknown, args_0: IFunctionPaths, args_1: IFunctionValues) => void | import("../types").IFunctionResult[];
export {};
