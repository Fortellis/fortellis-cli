"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const isObject_1 = require("../utils/isObject");
const validation_1 = require("./validation");
const createDefine = (exports) => {
    const define = (nameOrFactory, factory) => {
        if (typeof nameOrFactory === 'function') {
            exports.exports = nameOrFactory();
        }
        else if (typeof factory === 'function') {
            exports.exports = factory();
        }
        return;
    };
    Reflect.defineProperty(define, 'amd', {
        value: true,
        configurable: false,
        writable: false,
        enumerable: true,
    });
    return define;
};
const isESCJSCompatibleExport = (obj) => isObject_1.isObject(obj) && 'default' in obj;
exports.evaluateExport = (body) => {
    const mod = {
        exports: {},
    };
    const exports = {};
    const root = {};
    const define = createDefine(mod);
    Function('module, exports, define', String(body)).call(root, mod, exports, define);
    let maybeFn;
    if (isESCJSCompatibleExport(exports)) {
        maybeFn = exports.default;
    }
    else if ('returnExports' in root) {
        maybeFn = root.returnExports;
    }
    else if (isESCJSCompatibleExport(mod.exports)) {
        maybeFn = mod.exports.default;
    }
    else {
        maybeFn = mod.exports;
    }
    if (typeof maybeFn !== 'function') {
        throw new Error('Default function export expected');
    }
    return maybeFn;
};
exports.compileExportedFunction = (code, name, schema) => {
    const exportedFn = exports.evaluateExport(code);
    const fn = schema !== null ? validation_1.decorateIFunctionWithSchemaValidation(exportedFn, schema) : exportedFn;
    Reflect.defineProperty(fn, 'name', {
        configurable: true,
        value: name,
    });
    return fn;
};
//# sourceMappingURL=evaluators.js.map