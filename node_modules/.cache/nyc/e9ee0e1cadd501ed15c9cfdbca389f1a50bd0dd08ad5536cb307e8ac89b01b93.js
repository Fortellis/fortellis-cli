var cov_f55345cdc=function(){var path="/Users/eastland/src/fortellis-cli/src/commands/init.js";var hash="0786c3c6e2caf97b58619df7baef852774bcd264";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/eastland/src/fortellis-cli/src/commands/init.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:52}},"1":{start:{line:2,column:11},end:{line:2,column:24}},"2":{start:{line:3,column:18},end:{line:3,column:47}},"3":{start:{line:4,column:32},end:{line:4,column:80}},"4":{start:{line:5,column:26},end:{line:5,column:67}},"5":{start:{line:9,column:24},end:{line:9,column:47}},"6":{start:{line:11,column:4},end:{line:13,column:5}},"7":{start:{line:12,column:6},end:{line:12,column:70}},"8":{start:{line:15,column:4},end:{line:17,column:5}},"9":{start:{line:16,column:6},end:{line:16,column:40}},"10":{start:{line:19,column:4},end:{line:21,column:5}},"11":{start:{line:20,column:6},end:{line:20,column:38}},"12":{start:{line:23,column:4},end:{line:25,column:5}},"13":{start:{line:24,column:6},end:{line:24,column:38}},"14":{start:{line:27,column:4},end:{line:29,column:5}},"15":{start:{line:28,column:6},end:{line:28,column:38}},"16":{start:{line:32,column:36},end:{line:32,column:65}},"17":{start:{line:33,column:4},end:{line:33,column:41}},"18":{start:{line:35,column:4},end:{line:37,column:6}},"19":{start:{line:41,column:0},end:{line:46,column:2}},"20":{start:{line:48,column:0},end:{line:48,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:2},end:{line:8,column:3}},loc:{start:{line:8,column:14},end:{line:38,column:3}},line:8}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:13,column:5}},type:"if",locations:[{start:{line:11,column:4},end:{line:13,column:5}},{start:{line:11,column:4},end:{line:13,column:5}}],line:11},"1":{loc:{start:{line:15,column:4},end:{line:17,column:5}},type:"if",locations:[{start:{line:15,column:4},end:{line:17,column:5}},{start:{line:15,column:4},end:{line:17,column:5}}],line:15},"2":{loc:{start:{line:19,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:21,column:5}},{start:{line:19,column:4},end:{line:21,column:5}}],line:19},"3":{loc:{start:{line:23,column:4},end:{line:25,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:25,column:5}},{start:{line:23,column:4},end:{line:25,column:5}}],line:23},"4":{loc:{start:{line:27,column:4},end:{line:29,column:5}},type:"if",locations:[{start:{line:27,column:4},end:{line:29,column:5}},{start:{line:27,column:4},end:{line:29,column:5}}],line:27}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"0786c3c6e2caf97b58619df7baef852774bcd264"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Command,flags}=(cov_f55345cdc.s[0]++,require("@oclif/command"));const fs=(cov_f55345cdc.s[1]++,require("fs"));const constants=(cov_f55345cdc.s[2]++,require("../utils/constants"));const ConfigManagementService=(cov_f55345cdc.s[3]++,require("../services/config.management.service"));const RepositoryService=(cov_f55345cdc.s[4]++,require("../services/repository.service"));class InitCommand extends Command{async run(){cov_f55345cdc.f[0]++;const repoService=(cov_f55345cdc.s[5]++,new RepositoryService());cov_f55345cdc.s[6]++;if(repoService.repoIsValid()){cov_f55345cdc.b[0][0]++;cov_f55345cdc.s[7]++;this.error("This directory is already a Fortellis repository.");}else{cov_f55345cdc.b[0][1]++;}cov_f55345cdc.s[8]++;if(!fs.existsSync(constants.configDir)){cov_f55345cdc.b[1][0]++;cov_f55345cdc.s[9]++;fs.mkdirSync(constants.configDir);}else{cov_f55345cdc.b[1][1]++;}cov_f55345cdc.s[10]++;if(!fs.existsSync(constants.docsDir)){cov_f55345cdc.b[2][0]++;cov_f55345cdc.s[11]++;fs.mkdirSync(constants.docsDir);}else{cov_f55345cdc.b[2][1]++;}cov_f55345cdc.s[12]++;if(!fs.existsSync(constants.authDir)){cov_f55345cdc.b[3][0]++;cov_f55345cdc.s[13]++;fs.mkdirSync(constants.authDir);}else{cov_f55345cdc.b[3][1]++;}cov_f55345cdc.s[14]++;if(!fs.existsSync(constants.specDir)){cov_f55345cdc.b[4][0]++;cov_f55345cdc.s[15]++;fs.mkdirSync(constants.specDir);}else{cov_f55345cdc.b[4][1]++;}// Create blank config and save it.
const configManagementService=(cov_f55345cdc.s[16]++,new ConfigManagementService());cov_f55345cdc.s[17]++;configManagementService.saveConfig();cov_f55345cdc.s[18]++;this.log(`Initialized empty Fortellis repository in ${process.cwd()}/.fortellis/`);}}cov_f55345cdc.s[19]++;InitCommand.description=`Create a Fortellis repository in the current directory.
...
A fortellis repository is a directory containing a spec, docs, permissions, and .fortellis sub-directory. 
In the .fortellis sub-directory will be a config.yaml file which will contain the configuration data
for the repository.
`;cov_f55345cdc.s[20]++;module.exports=InitCommand;