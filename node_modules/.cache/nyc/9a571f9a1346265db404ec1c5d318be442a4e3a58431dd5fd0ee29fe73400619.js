var cov_bd4jsbh1e=function(){var path="/Users/eastland/src/fortellis-cli/src/commands/template.js";var hash="895763998ce92cd0542db9699c6eb144d6832f2f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/eastland/src/fortellis-cli/src/commands/template.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:52}},"1":{start:{line:2,column:26},end:{line:2,column:67}},"2":{start:{line:3,column:32},end:{line:3,column:80}},"3":{start:{line:4,column:11},end:{line:4,column:24}},"4":{start:{line:15,column:24},end:{line:15,column:47}},"5":{start:{line:16,column:4},end:{line:18,column:5}},"6":{start:{line:17,column:6},end:{line:17,column:56}},"7":{start:{line:21,column:4},end:{line:29,column:5}},"8":{start:{line:26,column:6},end:{line:28,column:8}},"9":{start:{line:31,column:4},end:{line:39,column:6}},"10":{start:{line:35,column:8},end:{line:37,column:9}},"11":{start:{line:36,column:10},end:{line:36,column:61}},"12":{start:{line:41,column:4},end:{line:49,column:6}},"13":{start:{line:45,column:8},end:{line:47,column:9}},"14":{start:{line:46,column:10},end:{line:46,column:67}},"15":{start:{line:51,column:4},end:{line:59,column:6}},"16":{start:{line:55,column:8},end:{line:57,column:9}},"17":{start:{line:56,column:10},end:{line:56,column:63}},"18":{start:{line:61,column:26},end:{line:61,column:55}},"19":{start:{line:62,column:4},end:{line:62,column:31}},"20":{start:{line:63,column:4},end:{line:63,column:55}},"21":{start:{line:64,column:4},end:{line:64,column:55}},"22":{start:{line:65,column:4},end:{line:65,column:52}},"23":{start:{line:66,column:4},end:{line:66,column:31}},"24":{start:{line:68,column:4},end:{line:70,column:6}},"25":{start:{line:74,column:0},end:{line:77,column:2}},"26":{start:{line:79,column:0},end:{line:79,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:2},end:{line:14,column:3}},loc:{start:{line:14,column:14},end:{line:71,column:3}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:34,column:6},end:{line:34,column:7}},loc:{start:{line:34,column:13},end:{line:38,column:7}},line:34},"2":{name:"(anonymous_2)",decl:{start:{line:44,column:6},end:{line:44,column:7}},loc:{start:{line:44,column:13},end:{line:48,column:7}},line:44},"3":{name:"(anonymous_3)",decl:{start:{line:54,column:6},end:{line:54,column:7}},loc:{start:{line:54,column:13},end:{line:58,column:7}},line:54}},branchMap:{"0":{loc:{start:{line:16,column:4},end:{line:18,column:5}},type:"if",locations:[{start:{line:16,column:4},end:{line:18,column:5}},{start:{line:16,column:4},end:{line:18,column:5}}],line:16},"1":{loc:{start:{line:21,column:4},end:{line:29,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:29,column:5}},{start:{line:21,column:4},end:{line:29,column:5}}],line:21},"2":{loc:{start:{line:22,column:6},end:{line:24,column:38}},type:"binary-expr",locations:[{start:{line:22,column:6},end:{line:22,column:38}},{start:{line:23,column:6},end:{line:23,column:38}},{start:{line:24,column:6},end:{line:24,column:38}}],line:22},"3":{loc:{start:{line:35,column:8},end:{line:37,column:9}},type:"if",locations:[{start:{line:35,column:8},end:{line:37,column:9}},{start:{line:35,column:8},end:{line:37,column:9}}],line:35},"4":{loc:{start:{line:45,column:8},end:{line:47,column:9}},type:"if",locations:[{start:{line:45,column:8},end:{line:47,column:9}},{start:{line:45,column:8},end:{line:47,column:9}}],line:45},"5":{loc:{start:{line:55,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:55,column:8},end:{line:57,column:9}},{start:{line:55,column:8},end:{line:57,column:9}}],line:55}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"895763998ce92cd0542db9699c6eb144d6832f2f"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Command,flags}=(cov_bd4jsbh1e.s[0]++,require("@oclif/command"));const RepositoryService=(cov_bd4jsbh1e.s[1]++,require("../services/repository.service"));const ConfigManagementService=(cov_bd4jsbh1e.s[2]++,require("../services/config.management.service"));const fs=(cov_bd4jsbh1e.s[3]++,require("fs"));/**
 * Create a template repository, with a sample Spec, Doc, and Permissions file.
 *
 * This command should not be able to override files that have already been saved to the repository.
 * In fact, it should only be usable on an empty repo.
 *
 */class TemplateCommand extends Command{async run(){cov_bd4jsbh1e.f[0]++;const repoService=(cov_bd4jsbh1e.s[4]++,new RepositoryService());cov_bd4jsbh1e.s[5]++;if(!repoService.repoIsValid()){cov_bd4jsbh1e.b[0][0]++;cov_bd4jsbh1e.s[6]++;this.error("This is not a Fortellis repository.");}else{cov_bd4jsbh1e.b[0][1]++;}// Check that the repo is empty
cov_bd4jsbh1e.s[7]++;if((cov_bd4jsbh1e.b[2][0]++,repoService.getSpecInDirectory())||(cov_bd4jsbh1e.b[2][1]++,repoService.getAuthInDirectory())||(cov_bd4jsbh1e.b[2][2]++,repoService.getDocsInDirectory())){cov_bd4jsbh1e.b[1][0]++;cov_bd4jsbh1e.s[8]++;this.error("Files are alread saved in this repo. Create an empty repo for a template.");}else{cov_bd4jsbh1e.b[1][1]++;}cov_bd4jsbh1e.s[9]++;fs.copyFile(`${__dirname}/../resources/sampleApiSpec.yaml`,"./specs/sampleApiSpec.yaml",err=>{cov_bd4jsbh1e.f[1]++;cov_bd4jsbh1e.s[10]++;if(err){cov_bd4jsbh1e.b[3][0]++;cov_bd4jsbh1e.s[11]++;this.error("Error copying template API spec file");}else{cov_bd4jsbh1e.b[3][1]++;}});cov_bd4jsbh1e.s[12]++;fs.copyFile(`${__dirname}/../resources/sampleDocumentation.md`,"./docs/sampleDocumentation.md",err=>{cov_bd4jsbh1e.f[2]++;cov_bd4jsbh1e.s[13]++;if(err){cov_bd4jsbh1e.b[4][0]++;cov_bd4jsbh1e.s[14]++;this.error("error copying template documentation file.");}else{cov_bd4jsbh1e.b[4][1]++;}});cov_bd4jsbh1e.s[15]++;fs.copyFile(`${__dirname}/../resources/samplePermissions.txt`,"./permissions/samplePermissions.txt",err=>{cov_bd4jsbh1e.f[3]++;cov_bd4jsbh1e.s[16]++;if(err){cov_bd4jsbh1e.b[5][0]++;cov_bd4jsbh1e.s[17]++;this.err("error copying template permissions file.");}else{cov_bd4jsbh1e.b[5][1]++;}});const configService=(cov_bd4jsbh1e.s[18]++,new ConfigManagementService());cov_bd4jsbh1e.s[19]++;configService.loadConfig();cov_bd4jsbh1e.s[20]++;configService.setAuthFile("samplePermissions.txt");cov_bd4jsbh1e.s[21]++;configService.setDocFile("sampleDocumentation.md");cov_bd4jsbh1e.s[22]++;configService.setSpecFile("sampleApiSpec.yaml");cov_bd4jsbh1e.s[23]++;configService.saveConfig();cov_bd4jsbh1e.s[24]++;this.log("Template Created: [sampleApiSpec.yaml, sampleDocumentation.md, samplePermissions.txt]");}}cov_bd4jsbh1e.s[25]++;TemplateCommand.description=`Put example template documents into an empty repository.
...
This creates sample spec, documentaiton, and permissions documents that the user can then modify for API development.
`;cov_bd4jsbh1e.s[26]++;module.exports=TemplateCommand;