var cov_ggungfhi2=function(){var path="/Users/eastland/src/fortellis-cli/src/services/specValidator.js";var hash="dc44a677a813c35194ccade37f76c9da93ca9d8c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/eastland/src/fortellis-cli/src/services/specValidator.js",statementMap:{"0":{start:{line:1,column:30},end:{line:1,column:56}},"1":{start:{line:2,column:29},end:{line:2,column:70}},"2":{start:{line:3,column:14},end:{line:3,column:30}},"3":{start:{line:4,column:23},end:{line:4,column:58}},"4":{start:{line:5,column:31},end:{line:5,column:72}},"5":{start:{line:6,column:25},end:{line:6,column:28}},"6":{start:{line:10,column:2},end:{line:10,column:73}},"7":{start:{line:23,column:11},end:{line:26,column:1}},"8":{start:{line:33,column:2},end:{line:35,column:3}},"9":{start:{line:34,column:4},end:{line:34,column:60}},"10":{start:{line:37,column:21},end:{line:37,column:44}},"11":{start:{line:38,column:24},end:{line:38,column:34}},"12":{start:{line:39,column:28},end:{line:39,column:35}},"13":{start:{line:41,column:15},end:{line:41,column:17}},"14":{start:{line:43,column:22},end:{line:43,column:63}},"15":{start:{line:44,column:2},end:{line:46,column:3}},"16":{start:{line:45,column:4},end:{line:45,column:50}},"17":{start:{line:48,column:2},end:{line:53,column:3}},"18":{start:{line:49,column:39},end:{line:49,column:76}},"19":{start:{line:50,column:4},end:{line:52,column:5}},"20":{start:{line:51,column:6},end:{line:51,column:31}},"21":{start:{line:55,column:21},end:{line:55,column:62}},"22":{start:{line:57,column:2},end:{line:57,column:37}},"23":{start:{line:59,column:2},end:{line:66,column:7}},"24":{start:{line:60,column:21},end:{line:60,column:43}},"25":{start:{line:62,column:24},end:{line:64,column:12}},"26":{start:{line:65,column:6},end:{line:65,column:44}},"27":{start:{line:67,column:2},end:{line:67,column:16}},"28":{start:{line:71,column:2},end:{line:73,column:4}},"29":{start:{line:78,column:28},end:{line:78,column:32}},"30":{start:{line:79,column:21},end:{line:79,column:43}},"31":{start:{line:80,column:2},end:{line:82,column:3}},"32":{start:{line:81,column:4},end:{line:81,column:42}},"33":{start:{line:83,column:2},end:{line:100,column:7}},"34":{start:{line:86,column:6},end:{line:92,column:7}},"35":{start:{line:87,column:8},end:{line:87,column:71}},"36":{start:{line:88,column:8},end:{line:88,column:41}},"37":{start:{line:90,column:8},end:{line:90,column:75}},"38":{start:{line:91,column:8},end:{line:91,column:46}},"39":{start:{line:95,column:6},end:{line:95,column:70}},"40":{start:{line:96,column:6},end:{line:99,column:8}},"41":{start:{line:104,column:2},end:{line:106,column:3}},"42":{start:{line:105,column:4},end:{line:105,column:36}},"43":{start:{line:109,column:2},end:{line:113,column:3}},"44":{start:{line:110,column:4},end:{line:110,column:53}},"45":{start:{line:112,column:4},end:{line:112,column:50}},"46":{start:{line:115,column:14},end:{line:115,column:53}},"47":{start:{line:117,column:2},end:{line:119,column:4}},"48":{start:{line:121,column:30},end:{line:124,column:3}},"49":{start:{line:126,column:30},end:{line:130,column:3}},"50":{start:{line:132,column:2},end:{line:141,column:7}},"51":{start:{line:134,column:16},end:{line:134,column:35}},"52":{start:{line:136,column:6},end:{line:140,column:7}},"53":{start:{line:137,column:8},end:{line:137,column:35}},"54":{start:{line:139,column:8},end:{line:139,column:35}},"55":{start:{line:144,column:0},end:{line:148,column:2}}},fnMap:{"0":{name:"validate",decl:{start:{line:28,column:15},end:{line:28,column:23}},loc:{start:{line:31,column:2},end:{line:68,column:1}},line:31},"1":{name:"(anonymous_1)",decl:{start:{line:60,column:12},end:{line:60,column:13}},loc:{start:{line:60,column:21},end:{line:60,column:43}},line:60},"2":{name:"(anonymous_2)",decl:{start:{line:61,column:9},end:{line:61,column:10}},loc:{start:{line:61,column:18},end:{line:66,column:5}},line:61},"3":{name:"getDomainNameError",decl:{start:{line:70,column:9},end:{line:70,column:27}},loc:{start:{line:70,column:45},end:{line:74,column:1}},line:70},"4":{name:"validateDomain",decl:{start:{line:76,column:9},end:{line:76,column:23}},loc:{start:{line:76,column:45},end:{line:101,column:1}},line:76},"5":{name:"(anonymous_5)",decl:{start:{line:85,column:10},end:{line:85,column:11}},loc:{start:{line:85,column:17},end:{line:93,column:5}},line:85},"6":{name:"(anonymous_6)",decl:{start:{line:94,column:11},end:{line:94,column:12}},loc:{start:{line:94,column:18},end:{line:100,column:5}},line:94},"7":{name:"validateBasepath",decl:{start:{line:103,column:9},end:{line:103,column:25}},loc:{start:{line:103,column:41},end:{line:142,column:1}},line:103},"8":{name:"(anonymous_8)",decl:{start:{line:134,column:10},end:{line:134,column:11}},loc:{start:{line:134,column:16},end:{line:134,column:35}},line:134},"9":{name:"(anonymous_9)",decl:{start:{line:135,column:11},end:{line:135,column:12}},loc:{start:{line:135,column:18},end:{line:141,column:5}},line:135}},branchMap:{"0":{loc:{start:{line:30,column:2},end:{line:30,column:59}},type:"default-arg",locations:[{start:{line:30,column:12},end:{line:30,column:59}}],line:30},"1":{loc:{start:{line:33,column:2},end:{line:35,column:3}},type:"if",locations:[{start:{line:33,column:2},end:{line:35,column:3}},{start:{line:33,column:2},end:{line:35,column:3}}],line:33},"2":{loc:{start:{line:38,column:10},end:{line:38,column:19}},type:"default-arg",locations:[{start:{line:38,column:17},end:{line:38,column:19}}],line:38},"3":{loc:{start:{line:44,column:2},end:{line:46,column:3}},type:"if",locations:[{start:{line:44,column:2},end:{line:46,column:3}},{start:{line:44,column:2},end:{line:46,column:3}}],line:44},"4":{loc:{start:{line:48,column:2},end:{line:53,column:3}},type:"if",locations:[{start:{line:48,column:2},end:{line:53,column:3}},{start:{line:48,column:2},end:{line:53,column:3}}],line:48},"5":{loc:{start:{line:50,column:4},end:{line:52,column:5}},type:"if",locations:[{start:{line:50,column:4},end:{line:52,column:5}},{start:{line:50,column:4},end:{line:52,column:5}}],line:50},"6":{loc:{start:{line:50,column:8},end:{line:50,column:33}},type:"binary-expr",locations:[{start:{line:50,column:8},end:{line:50,column:22}},{start:{line:50,column:26},end:{line:50,column:33}}],line:50},"7":{loc:{start:{line:60,column:21},end:{line:60,column:43}},type:"binary-expr",locations:[{start:{line:60,column:21},end:{line:60,column:26}},{start:{line:60,column:30},end:{line:60,column:43}}],line:60},"8":{loc:{start:{line:62,column:24},end:{line:64,column:12}},type:"cond-expr",locations:[{start:{line:63,column:10},end:{line:63,column:54}},{start:{line:64,column:10},end:{line:64,column:12}}],line:62},"9":{loc:{start:{line:70,column:28},end:{line:70,column:43}},type:"default-arg",locations:[{start:{line:70,column:41},end:{line:70,column:43}}],line:70},"10":{loc:{start:{line:78,column:10},end:{line:78,column:23}},type:"default-arg",locations:[{start:{line:78,column:21},end:{line:78,column:23}}],line:78},"11":{loc:{start:{line:80,column:2},end:{line:82,column:3}},type:"if",locations:[{start:{line:80,column:2},end:{line:82,column:3}},{start:{line:80,column:2},end:{line:82,column:3}}],line:80},"12":{loc:{start:{line:86,column:6},end:{line:92,column:7}},type:"if",locations:[{start:{line:86,column:6},end:{line:92,column:7}},{start:{line:86,column:6},end:{line:92,column:7}}],line:86},"13":{loc:{start:{line:103,column:26},end:{line:103,column:39}},type:"default-arg",locations:[{start:{line:103,column:37},end:{line:103,column:39}}],line:103},"14":{loc:{start:{line:104,column:2},end:{line:106,column:3}},type:"if",locations:[{start:{line:104,column:2},end:{line:106,column:3}},{start:{line:104,column:2},end:{line:106,column:3}}],line:104},"15":{loc:{start:{line:109,column:2},end:{line:113,column:3}},type:"if",locations:[{start:{line:109,column:2},end:{line:113,column:3}},{start:{line:109,column:2},end:{line:113,column:3}}],line:109},"16":{loc:{start:{line:136,column:6},end:{line:140,column:7}},type:"if",locations:[{start:{line:136,column:6},end:{line:140,column:7}},{start:{line:136,column:6},end:{line:140,column:7}}],line:136}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0],"11":[0,0],"12":[0,0],"13":[0],"14":[0,0],"15":[0,0],"16":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"dc44a677a813c35194ccade37f76c9da93ca9d8c"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{parseWithPointers}=(cov_ggungfhi2.s[0]++,require("@stoplight/yaml"));const OpenAPISpecValidator=(cov_ggungfhi2.s[1]++,require("../utils/spec-validation/index"));const axios=(cov_ggungfhi2.s[2]++,require("axios"));const defaultConfigs=(cov_ggungfhi2.s[3]++,require("../config/defaultConfigs"));const{logService:logger}=(cov_ggungfhi2.s[4]++,require("@cdkglobal/fortellis-dev-utils"));const ERROR_PATH_DELIM=(cov_ggungfhi2.s[5]++,"/");// This will need to be moved to an ENV variable (and possibly set by Terraform)
const domainServiceUrl=(cov_ggungfhi2.s[6]++,"https://h9mfexl1db.execute-api.us-west-2.amazonaws.com/api/v1/domains");/**
 * Validates a spec by first linting the spec against the OpenAPI and Fortellis schema standards.
 * Throws error listing validation failures if spec is invalid.
 *
 * Set options.standard to true to validate based on Fortellis standards
 *
 * @param {string} spec
 * @param {Object} options
 * @returns {Object} parsed spec as a corresponding Object
 */let auth=(cov_ggungfhi2.s[7]++,{username:defaultConfigs.username,password:defaultConfigs.password});async function validate(spec,options=(cov_ggungfhi2.b[0][0]++,{standard:false,ignoreBasePathCheck:false})){cov_ggungfhi2.f[0]++;cov_ggungfhi2.s[8]++;// Oct-01-2018 Note: Set to non-standard default for now to disable header validation
if(typeof spec!=="string"){cov_ggungfhi2.b[1][0]++;cov_ggungfhi2.s[9]++;throw new Error("Spec is a currently unsupported type");}else{cov_ggungfhi2.b[1][1]++;}const parsedSpec=(cov_ggungfhi2.s[10]++,parseWithPointers(spec));const{data=(cov_ggungfhi2.b[2][0]++,{})}=(cov_ggungfhi2.s[11]++,parsedSpec);const{Authorization}=(cov_ggungfhi2.s[12]++,options);let errors=(cov_ggungfhi2.s[13]++,[]);const domainError=(cov_ggungfhi2.s[14]++,await validateDomain(data,Authorization));cov_ggungfhi2.s[15]++;if(domainError.message){cov_ggungfhi2.b[3][0]++;cov_ggungfhi2.s[16]++;errors.push({message:domainError.message});}else{cov_ggungfhi2.b[3][1]++;}cov_ggungfhi2.s[17]++;if(!options.ignoreBasePathCheck){cov_ggungfhi2.b[4][0]++;const{basePathValid,message}=(cov_ggungfhi2.s[18]++,await validateBasepath(data.basePath));cov_ggungfhi2.s[19]++;if((cov_ggungfhi2.b[6][0]++,!basePathValid)&&(cov_ggungfhi2.b[6][1]++,message)){cov_ggungfhi2.b[5][0]++;cov_ggungfhi2.s[20]++;errors.push({message});}else{cov_ggungfhi2.b[5][1]++;}}else{cov_ggungfhi2.b[4][1]++;}const specErrors=(cov_ggungfhi2.s[21]++,await OpenAPISpecValidator.validate(data));// Concatinating basePathValidation error with open api spec validation errors.
cov_ggungfhi2.s[22]++;errors=errors.concat(specErrors);// Converting the validation error objects returned by Spectral to strings with line breaks for UI.
cov_ggungfhi2.s[23]++;errors=errors.filter(error=>{cov_ggungfhi2.f[1]++;cov_ggungfhi2.s[24]++;return(cov_ggungfhi2.b[7][0]++,error)&&(cov_ggungfhi2.b[7][1]++,error.message);}).map(error=>{cov_ggungfhi2.f[2]++;const errorPath=(cov_ggungfhi2.s[25]++,error.path?(cov_ggungfhi2.b[8][0]++,` at #/${error.path.join(ERROR_PATH_DELIM)}`):(cov_ggungfhi2.b[8][1]++,""));cov_ggungfhi2.s[26]++;return`${error.message}${errorPath}`;});cov_ggungfhi2.s[27]++;return errors;}function getDomainNameError(domainName=(cov_ggungfhi2.b[9][0]++,"")){cov_ggungfhi2.f[3]++;cov_ggungfhi2.s[28]++;return{message:`The '${domainName}' domain does not exist. Please use a valid domain name in the prefix of the basePath. Example: /{valid-domain}/xxx/xxx`};}function validateDomain(spec,Authorization){cov_ggungfhi2.f[4]++;//   const domainServiceUrl = process.env.DOMAIN_SERVICE_URL;
const{basePath=(cov_ggungfhi2.b[10][0]++,"")}=(cov_ggungfhi2.s[29]++,spec);const domainName=(cov_ggungfhi2.s[30]++,basePath.split("/")[1]);cov_ggungfhi2.s[31]++;if(!domainName){cov_ggungfhi2.b[11][0]++;cov_ggungfhi2.s[32]++;return getDomainNameError(domainName);}else{cov_ggungfhi2.b[11][1]++;}cov_ggungfhi2.s[33]++;return axios.get(`${domainServiceUrl}/${domainName}`,{headers:{Authorization}}).then(res=>{cov_ggungfhi2.f[5]++;cov_ggungfhi2.s[34]++;if(res.data){cov_ggungfhi2.b[12][0]++;cov_ggungfhi2.s[35]++;logger.info({message:"Domain found",domainName,basePath});cov_ggungfhi2.s[36]++;return{domain:res.data.name};}else{cov_ggungfhi2.b[12][1]++;cov_ggungfhi2.s[37]++;logger.info({message:"Domain not found",domainName,basePath});cov_ggungfhi2.s[38]++;return getDomainNameError(domainName);}}).catch(err=>{cov_ggungfhi2.f[6]++;cov_ggungfhi2.s[39]++;logger.error({message:err.toString(),domainName,basePath});cov_ggungfhi2.s[40]++;return{message:"Error finding domain name from basepath. Please contact Fortellis support"};});}function validateBasepath(basePath=(cov_ggungfhi2.b[13][0]++,"")){cov_ggungfhi2.f[7]++;cov_ggungfhi2.s[41]++;if(!basePath){cov_ggungfhi2.b[14][0]++;cov_ggungfhi2.s[42]++;return{basePathValid:false};}else{cov_ggungfhi2.b[14][1]++;}let apigeeHost;cov_ggungfhi2.s[43]++;if(process.env.NODE_ENV==="development"){cov_ggungfhi2.b[15][0]++;cov_ggungfhi2.s[44]++;apigeeHost=defaultConfigs.portal.apigeeHostDev;}else{cov_ggungfhi2.b[15][1]++;cov_ggungfhi2.s[45]++;apigeeHost=defaultConfigs.portal.apigeeHost;}const url=(cov_ggungfhi2.s[46]++,`https://${apigeeHost}${basePath}/ping`);cov_ggungfhi2.s[47]++;logger.debug(`Pinging apigee at: ${url} in environment: ${process.env.NODE_ENV}.`);const basePathDataSuccess=(cov_ggungfhi2.s[48]++,{basePathValid:true,message:"Valid basepath."});const basePathDataFailure=(cov_ggungfhi2.s[49]++,{basePathValid:false,message:"Basepath already exists. A unique basepath is required for each spec."});cov_ggungfhi2.s[50]++;return axios.get(url,{auth:auth}).then(()=>{cov_ggungfhi2.f[8]++;cov_ggungfhi2.s[51]++;return basePathDataFailure;}).catch(err=>{cov_ggungfhi2.f[9]++;cov_ggungfhi2.s[52]++;if(err.response.status===404){cov_ggungfhi2.b[16][0]++;cov_ggungfhi2.s[53]++;return basePathDataSuccess;}else{cov_ggungfhi2.b[16][1]++;cov_ggungfhi2.s[54]++;return basePathDataFailure;}});}cov_ggungfhi2.s[55]++;module.exports={validate,validateBasepath,validateDomain};