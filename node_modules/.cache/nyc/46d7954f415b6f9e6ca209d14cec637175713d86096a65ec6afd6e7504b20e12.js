var cov_xdsvfd4g2=function(){var path="/Users/eastland/src/fortellis-cli/src/commands/lint.js";var hash="f5b353bbd5239a6ccce2dbd7f9c75f8622cd0494";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/eastland/src/fortellis-cli/src/commands/lint.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:52}},"1":{start:{line:2,column:11},end:{line:2,column:24}},"2":{start:{line:3,column:18},end:{line:3,column:47}},"3":{start:{line:4,column:32},end:{line:4,column:80}},"4":{start:{line:5,column:22},end:{line:5,column:58}},"5":{start:{line:6,column:26},end:{line:6,column:67}},"6":{start:{line:8,column:17},end:{line:8,column:36}},"7":{start:{line:9,column:19},end:{line:9,column:30}},"8":{start:{line:13,column:24},end:{line:13,column:47}},"9":{start:{line:14,column:4},end:{line:16,column:5}},"10":{start:{line:15,column:6},end:{line:15,column:56}},"11":{start:{line:18,column:22},end:{line:18,column:45}},"12":{start:{line:20,column:24},end:{line:20,column:53}},"13":{start:{line:21,column:4},end:{line:21,column:31}},"14":{start:{line:23,column:25},end:{line:23,column:51}},"15":{start:{line:24,column:4},end:{line:28,column:5}},"16":{start:{line:25,column:6},end:{line:27,column:8}},"17":{start:{line:29,column:4},end:{line:29,column:49}},"18":{start:{line:32,column:29},end:{line:37,column:5}},"19":{start:{line:39,column:18},end:{line:42,column:5}},"20":{start:{line:44,column:18},end:{line:44,column:73}},"21":{start:{line:46,column:4},end:{line:50,column:5}},"22":{start:{line:47,column:6},end:{line:49,column:9}},"23":{start:{line:48,column:8},end:{line:48,column:34}},"24":{start:{line:54,column:0},end:{line:57,column:2}},"25":{start:{line:59,column:0},end:{line:64,column:2}},"26":{start:{line:66,column:0},end:{line:66,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:2},end:{line:12,column:3}},loc:{start:{line:12,column:14},end:{line:51,column:3}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:47,column:22},end:{line:47,column:23}},loc:{start:{line:47,column:31},end:{line:49,column:7}},line:47}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:16,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:16,column:5}},{start:{line:14,column:4},end:{line:16,column:5}}],line:14},"1":{loc:{start:{line:24,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:24,column:4},end:{line:28,column:5}},{start:{line:24,column:4},end:{line:28,column:5}}],line:24},"2":{loc:{start:{line:46,column:4},end:{line:50,column:5}},type:"if",locations:[{start:{line:46,column:4},end:{line:50,column:5}},{start:{line:46,column:4},end:{line:50,column:5}}],line:46},"3":{loc:{start:{line:46,column:8},end:{line:46,column:63}},type:"binary-expr",locations:[{start:{line:46,column:8},end:{line:46,column:15}},{start:{line:46,column:19},end:{line:46,column:41}},{start:{line:46,column:45},end:{line:46,column:63}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"f5b353bbd5239a6ccce2dbd7f9c75f8622cd0494"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Command,flags}=(cov_xdsvfd4g2.s[0]++,require("@oclif/command"));const fs=(cov_xdsvfd4g2.s[1]++,require("fs"));const constants=(cov_xdsvfd4g2.s[2]++,require("../utils/constants"));const ConfigManagementService=(cov_xdsvfd4g2.s[3]++,require("../services/config.management.service"));const specValidator=(cov_xdsvfd4g2.s[4]++,require("../services/specValidator"));const RepositoryService=(cov_xdsvfd4g2.s[5]++,require("../services/repository.service"));const redColor=(cov_xdsvfd4g2.s[6]++,"\x1b[31m%s\x1b[0m");const resetColor=(cov_xdsvfd4g2.s[7]++,"\x1b[0m%s");class LintCommand extends Command{async run(){cov_xdsvfd4g2.f[0]++;const repoService=(cov_xdsvfd4g2.s[8]++,new RepositoryService());cov_xdsvfd4g2.s[9]++;if(!repoService.repoIsValid()){cov_xdsvfd4g2.b[0][0]++;cov_xdsvfd4g2.s[10]++;this.error("This is not a Fortellis repository.");}else{cov_xdsvfd4g2.b[0][1]++;}const{flags}=(cov_xdsvfd4g2.s[11]++,this.parse(LintCommand));let configService=(cov_xdsvfd4g2.s[12]++,new ConfigManagementService());cov_xdsvfd4g2.s[13]++;configService.loadConfig();const specFileName=(cov_xdsvfd4g2.s[14]++,configService.specFileName);cov_xdsvfd4g2.s[15]++;if(!specFileName){cov_xdsvfd4g2.b[1][0]++;cov_xdsvfd4g2.s[16]++;this.error("Unable to validate spec. No spec file exists in this repository");}else{cov_xdsvfd4g2.b[1][1]++;}cov_xdsvfd4g2.s[17]++;this.log("Linting Spec File:",specFileName);// Load the spec file for linting.
const specFileContents=(cov_xdsvfd4g2.s[18]++,fs.readFileSync(constants.specDir+"/"+specFileName,{encoding:"utf-8"}));let options=(cov_xdsvfd4g2.s[19]++,{standard:false,ignoreBasePathCheck:flags.ignoreBasepathCheck});let results=(cov_xdsvfd4g2.s[20]++,await specValidator.validate(specFileContents,options));cov_xdsvfd4g2.s[21]++;if((cov_xdsvfd4g2.b[3][0]++,results)&&(cov_xdsvfd4g2.b[3][1]++,Array.isArray(results))&&(cov_xdsvfd4g2.b[3][2]++,results.length>0)){cov_xdsvfd4g2.b[2][0]++;cov_xdsvfd4g2.s[22]++;results.forEach(entry=>{cov_xdsvfd4g2.f[1]++;cov_xdsvfd4g2.s[23]++;this.log(redColor,entry);});}else{cov_xdsvfd4g2.b[2][1]++;}}}cov_xdsvfd4g2.s[24]++;LintCommand.description=`Validate (lint) the contents of the repository spec file.
...
Check to see that the spec matches both the OpenAPI and Fortellis schema standards.
`;cov_xdsvfd4g2.s[25]++;LintCommand.flags={ignoreBasepathCheck:flags.boolean({char:"i",default:false})};cov_xdsvfd4g2.s[26]++;module.exports=LintCommand;