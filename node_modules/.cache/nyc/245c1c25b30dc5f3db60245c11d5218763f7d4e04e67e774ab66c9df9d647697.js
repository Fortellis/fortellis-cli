var cov_pgupfwilu=function(){var path="/Users/eastland/src/fortellis-cli/src/commands/add.js";var hash="2096733aedaf9eef668794b56017f25222eaa514";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/eastland/src/fortellis-cli/src/commands/add.js",statementMap:{"0":{start:{line:1,column:27},end:{line:1,column:52}},"1":{start:{line:2,column:11},end:{line:2,column:24}},"2":{start:{line:3,column:32},end:{line:3,column:80}},"3":{start:{line:4,column:26},end:{line:4,column:67}},"4":{start:{line:8,column:22},end:{line:8,column:44}},"5":{start:{line:10,column:30},end:{line:10,column:53}},"6":{start:{line:13,column:4},end:{line:15,column:5}},"7":{start:{line:14,column:6},end:{line:14,column:56}},"8":{start:{line:17,column:36},end:{line:17,column:65}},"9":{start:{line:18,column:4},end:{line:18,column:41}},"10":{start:{line:20,column:19},end:{line:20,column:21}},"11":{start:{line:22,column:4},end:{line:60,column:5}},"12":{start:{line:24,column:6},end:{line:24,column:31}},"13":{start:{line:25,column:6},end:{line:35,column:7}},"14":{start:{line:27,column:8},end:{line:27,column:58}},"15":{start:{line:28,column:8},end:{line:28,column:54}},"16":{start:{line:31,column:8},end:{line:33,column:9}},"17":{start:{line:32,column:10},end:{line:32,column:30}},"18":{start:{line:34,column:8},end:{line:34,column:54}},"19":{start:{line:36,column:11},end:{line:60,column:5}},"20":{start:{line:38,column:6},end:{line:38,column:37}},"21":{start:{line:39,column:6},end:{line:45,column:7}},"22":{start:{line:40,column:8},end:{line:40,column:58}},"23":{start:{line:42,column:8},end:{line:42,column:53}},"24":{start:{line:44,column:8},end:{line:44,column:53}},"25":{start:{line:46,column:11},end:{line:60,column:5}},"26":{start:{line:48,column:6},end:{line:48,column:34}},"27":{start:{line:49,column:6},end:{line:54,column:7}},"28":{start:{line:50,column:8},end:{line:50,column:58}},"29":{start:{line:51,column:8},end:{line:51,column:54}},"30":{start:{line:53,column:8},end:{line:53,column:54}},"31":{start:{line:56,column:6},end:{line:58,column:8}},"32":{start:{line:59,column:6},end:{line:59,column:15}},"33":{start:{line:62,column:4},end:{line:62,column:41}},"34":{start:{line:64,column:4},end:{line:64,column:62}},"35":{start:{line:68,column:0},end:{line:75,column:2}},"36":{start:{line:77,column:0},end:{line:90,column:2}},"37":{start:{line:92,column:0},end:{line:92,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:2},end:{line:7,column:3}},loc:{start:{line:7,column:14},end:{line:65,column:3}},line:7}},branchMap:{"0":{loc:{start:{line:13,column:4},end:{line:15,column:5}},type:"if",locations:[{start:{line:13,column:4},end:{line:15,column:5}},{start:{line:13,column:4},end:{line:15,column:5}}],line:13},"1":{loc:{start:{line:22,column:4},end:{line:60,column:5}},type:"if",locations:[{start:{line:22,column:4},end:{line:60,column:5}},{start:{line:22,column:4},end:{line:60,column:5}}],line:22},"2":{loc:{start:{line:25,column:6},end:{line:35,column:7}},type:"if",locations:[{start:{line:25,column:6},end:{line:35,column:7}},{start:{line:25,column:6},end:{line:35,column:7}}],line:25},"3":{loc:{start:{line:31,column:8},end:{line:33,column:9}},type:"if",locations:[{start:{line:31,column:8},end:{line:33,column:9}},{start:{line:31,column:8},end:{line:33,column:9}}],line:31},"4":{loc:{start:{line:36,column:11},end:{line:60,column:5}},type:"if",locations:[{start:{line:36,column:11},end:{line:60,column:5}},{start:{line:36,column:11},end:{line:60,column:5}}],line:36},"5":{loc:{start:{line:39,column:6},end:{line:45,column:7}},type:"if",locations:[{start:{line:39,column:6},end:{line:45,column:7}},{start:{line:39,column:6},end:{line:45,column:7}}],line:39},"6":{loc:{start:{line:46,column:11},end:{line:60,column:5}},type:"if",locations:[{start:{line:46,column:11},end:{line:60,column:5}},{start:{line:46,column:11},end:{line:60,column:5}}],line:46},"7":{loc:{start:{line:49,column:6},end:{line:54,column:7}},type:"if",locations:[{start:{line:49,column:6},end:{line:54,column:7}},{start:{line:49,column:6},end:{line:54,column:7}}],line:49}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"2096733aedaf9eef668794b56017f25222eaa514"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{Command,flags}=(cov_pgupfwilu.s[0]++,require("@oclif/command"));const fs=(cov_pgupfwilu.s[1]++,require("fs"));const ConfigManagementService=(cov_pgupfwilu.s[2]++,require("../services/config.management.service"));const RepositoryService=(cov_pgupfwilu.s[3]++,require("../services/repository.service"));class AddCommand extends Command{async run(){cov_pgupfwilu.f[0]++;const{flags}=(cov_pgupfwilu.s[4]++,this.parse(AddCommand));const repositoryService=(cov_pgupfwilu.s[5]++,new RepositoryService());// Verify that this is a Fortellis repo
cov_pgupfwilu.s[6]++;if(!repositoryService.repoIsValid()){cov_pgupfwilu.b[0][0]++;cov_pgupfwilu.s[7]++;this.error("This is not a Fortellis repository.");}else{cov_pgupfwilu.b[0][1]++;}const configManagementService=(cov_pgupfwilu.s[8]++,new ConfigManagementService());cov_pgupfwilu.s[9]++;configManagementService.loadConfig();let fileName=(cov_pgupfwilu.s[10]++,"");cov_pgupfwilu.s[11]++;if(flags.apispec){cov_pgupfwilu.b[1][0]++;cov_pgupfwilu.s[12]++;// Save a new Spec file to the config
fileName=flags.apispec;cov_pgupfwilu.s[13]++;if(fileName=="*"){cov_pgupfwilu.b[2][0]++;cov_pgupfwilu.s[14]++;// If file name is '*', use the file in the directory.
fileName=repositoryService.getSpecInDirectory();cov_pgupfwilu.s[15]++;configManagementService.setSpecFile(fileName);}else{cov_pgupfwilu.b[2][1]++;cov_pgupfwilu.s[16]++;// If the file name is specified, make sure it is a .yaml file.
if(fileName.indexOf(".yaml")<0){cov_pgupfwilu.b[3][0]++;cov_pgupfwilu.s[17]++;fileName+=".yaml";}else{cov_pgupfwilu.b[3][1]++;}cov_pgupfwilu.s[18]++;configManagementService.setSpecFile(fileName);}}else{cov_pgupfwilu.b[1][1]++;cov_pgupfwilu.s[19]++;if(flags.documentation){cov_pgupfwilu.b[4][0]++;cov_pgupfwilu.s[20]++;// Save a new Documentation file to the config
fileName=flags.documentation;cov_pgupfwilu.s[21]++;if(fileName=="*"){cov_pgupfwilu.b[5][0]++;cov_pgupfwilu.s[22]++;fileName=repositoryService.getDocsInDirectory();cov_pgupfwilu.s[23]++;configManagementService.setDocFile(fileName);}else{cov_pgupfwilu.b[5][1]++;cov_pgupfwilu.s[24]++;configManagementService.setDocFile(fileName);}}else{cov_pgupfwilu.b[4][1]++;cov_pgupfwilu.s[25]++;if(flags.permission){cov_pgupfwilu.b[6][0]++;cov_pgupfwilu.s[26]++;// Save a new Permissions file to the config
fileName=flags.permission;cov_pgupfwilu.s[27]++;if(fileName=="*"){cov_pgupfwilu.b[7][0]++;cov_pgupfwilu.s[28]++;fileName=repositoryService.getAuthInDirectory();cov_pgupfwilu.s[29]++;configManagementService.setAuthFile(fileName);}else{cov_pgupfwilu.b[7][1]++;cov_pgupfwilu.s[30]++;configManagementService.setAuthFile(fileName);}}else{cov_pgupfwilu.b[6][1]++;cov_pgupfwilu.s[31]++;this.log("You must specifiy the type of flie to be added to the repository");cov_pgupfwilu.s[32]++;return 1;}}}cov_pgupfwilu.s[33]++;configManagementService.saveConfig();cov_pgupfwilu.s[34]++;this.log(`${fileName} has been added to the repository.`);}}cov_pgupfwilu.s[35]++;AddCommand.description=`Add an item to the Fortellis repository.
...
Add either an API Spec, API Docs, or Permissions file to the repository.

The file name can be specified, or if '*' is entered as a file name the
file which is in the proper diretory (specs/docs/permissions) will be added 
to the repository.
`;cov_pgupfwilu.s[36]++;AddCommand.flags={apispec:flags.string({char:"a",description:"Add Spec file to the repostory"}),documentation:flags.string({char:"d",description:"Add Documentation file to the repository"}),permission:flags.string({char:"p",description:"Add Permissions file to the repository"})};cov_pgupfwilu.s[37]++;module.exports=AddCommand;