const logger = require('../../src/logging/logService');

describe('src/logging/logService ', function() {
  test('error api should be defined', () => {
    expect(logger.error).toBeDefined();
  });

  test('warn api should be defined', () => {
    expect(logger.warn).toBeDefined();
  });

  test('info api should be defined', () => {
    expect(logger.info).toBeDefined();
  });

  test('verbose api should be defined', () => {
    expect(logger.verbose).toBeDefined();
  });

  test('debug api should be defined', () => {
    expect(logger.debug).toBeDefined();
  });

  test('silly api should be defined', () => {
    expect(logger.silly).toBeDefined();
  });

  test('setContext api should throw error for invalid context', () => {
    function configureContext() {
      logger.setContext();
    }
    expect(configureContext).toThrow(
      'Invalid logger context - context cannot be empty/undefined.'
    );
  });

  test('setLevel api should throw error for invalid level', () => {
    function configureLevel() {
      logger.setLevel('emergency');
    }
    expect(configureLevel).toThrow(
      'Invalid logger level - only following levels are ALLOWED - error/warn/info/verbose/debug/silly.'
    );
  });
});
