'use strict';
const AWS = require('aws-sdk');
const elasticsearch = require('elasticsearch');
const awsHttpClient = require('http-aws-es');
const { logService: logger } = require('../index');

class ElasticSearch {
  constructor(elasticSearchBaseURL, awsRegion) {
    // Elastic Search Client Configuration
    this.client = elasticsearch.Client({
      hosts: elasticSearchBaseURL,
      connectionClass: awsHttpClient,
      awsConfig: new AWS.Config({ awsRegion }),
      amazonES: {
        region: awsRegion,
        credentials: new AWS.EnvironmentCredentials('AWS')
      }
    });
  }

  // Call Search Endpoint to get the search results
  async search(req = {}) {
    const { index, payload, errorMsg } = req;

    return await this.client
      .search({
        index: index,
        body: payload
      })
      .then(result => {
        logger.info({ message: 'Elasticsearch results successfully fetched' });
        return result;
      })
      .catch(error => {
        const errorMessage = error.message ? error.message : errorMsg;
        logger.error({
          message: `Elastic Search Error from Search Endpoint: ${errorMessage}`,
          index: index,
          searchQuery: payload
        });
        throw error;
      });
  }
}

module.exports = ElasticSearch;
